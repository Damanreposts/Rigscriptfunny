-- Server Script for Rig Control
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create RemoteEvents for communication
local toggleFollowEvent = Instance.new("RemoteEvent")
toggleFollowEvent.Name = "ToggleFollow"
toggleFollowEvent.Parent = ReplicatedStorage

local jumpRigEvent = Instance.new("RemoteEvent")
jumpRigEvent.Name = "JumpRig"
jumpRigEvent.Parent = ReplicatedStorage

local sitRigEvent = Instance.new("RemoteEvent")
sitRigEvent.Name = "SitRig"
sitRigEvent.Parent = ReplicatedStorage

local function createR6Rig(player)
    -- Create an R6 rig
    local rig = Instance.new("Model", workspace)
    rig.Name = player.Name .. "'s Rig"
    
    -- Create Humanoid and Parts for R6
    local humanoid = Instance.new("Humanoid", rig)
    humanoid.MaxHealth = math.huge
    humanoid.Health = humanoid.MaxHealth
    
    local humanoidRootPart = Instance.new("Part", rig)
    humanoidRootPart.Size = Vector3.new(2, 5, 1)
    humanoidRootPart.Anchored = false
    humanoidRootPart.CanCollide = true
    humanoidRootPart.Position = player.Character.HumanoidRootPart.Position + Vector3.new(5, 0, 0) -- Spawn slightly to the side
    humanoidRootPart.Name = "HumanoidRootPart"
    
    -- Create R6 parts
    local head = Instance.new("Part", rig)
    head.Size = Vector3.new(2, 1, 1)
    head.Position = humanoidRootPart.Position + Vector3.new(0, 3, 0)
    head.Name = "Head"
    head.BrickColor = BrickColor.White() -- Default head color
    
    local torso = Instance.new("Part", rig)
    torso.Size = Vector3.new(2, 2, 1)
    torso.Position = humanoidRootPart.Position + Vector3.new(0, 1, 0)
    torso.Name = "Torso"
    
    local leftLeg = Instance.new("Part", rig)
    leftLeg.Size = Vector3.new(1, 2, 1)
    leftLeg.Position = humanoidRootPart.Position + Vector3.new(-0.5, -1, 0)
    leftLeg.Name = "Left Leg"
    
    local rightLeg = Instance.new("Part", rig)
    rightLeg.Size = Vector3.new(1, 2, 1)
    rightLeg.Position = humanoidRootPart.Position + Vector3.new(0.5, -1, 0)
    rightLeg.Name = "Right Leg"
    
    local leftArm = Instance.new("Part", rig)
    leftArm.Size = Vector3.new(1, 2, 1)
    leftArm.Position = humanoidRootPart.Position + Vector3.new(-1.5, 1, 0)
    leftArm.Name = "Left Arm"
    
    local rightArm = Instance.new("Part", rig)
    rightArm.Size = Vector3.new(1, 2, 1)
    rightArm.Position = humanoidRootPart.Position + Vector3.new(1.5, 1, 0)
    rightArm.Name = "Right Arm"

    -- Create joints between parts
    local weld = Instance.new("WeldConstraint", torso)
    weld.Part0 = humanoidRootPart
    weld.Part1 = torso
    
    local headWeld = Instance.new("WeldConstraint", torso)
    headWeld.Part0 = torso
    headWeld.Part1 = head
    
    local leftLegWeld = Instance.new("WeldConstraint", torso)
    leftLegWeld.Part0 = torso
    leftLegWeld.Part1 = leftLeg
    
    local rightLegWeld = Instance.new("WeldConstraint", torso)
    rightLegWeld.Part0 = torso
    rightLegWeld.Part1 = rightLeg
    
    local leftArmWeld = Instance.new("WeldConstraint", torso)
    leftArmWeld.Part0 = torso
    leftArmWeld.Part1 = leftArm
    
    local rightArmWeld = Instance.new("WeldConstraint", torso)
    rightArmWeld.Part0 = torso
    rightArmWeld.Part1 = rightArm

    return rig
end

local playerRigs = {}

-- Handle rig creation and following
toggleFollowEvent.OnServerEvent:Connect(function(player, following)
    if following then
        local rig = createR6Rig(player)
        playerRigs[player.UserId] = rig

        -- Follow the player
        while playerRigs[player.UserId] and player.Character and player.Character:FindFirstChild("HumanoidRootPart") do
            local rigHumanoidRootPart = rig:FindFirstChild("HumanoidRootPart")
            if rigHumanoidRootPart then
                rigHumanoidRootPart.Position = player.Character.HumanoidRootPart.Position + Vector3.new(5, 0, 0) -- Adjust position
            end
            wait(0.1)
        end
    else
        -- Stop following and remove the rig
        if playerRigs[player.UserId] then
            playerRigs[player.UserId]:Destroy()
            playerRigs[player.UserId] = nil
        end
    end
end)

jumpRigEvent.OnServerEvent:Connect(function(player)
    local rig = playerRigs[player.UserId]
    if rig and rig:FindFirstChild("Humanoid") then
        rig.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

sitRigEvent.OnServerEvent:Connect(function(player)
    local rig = playerRigs[player.UserId]
    if rig and rig:FindFirstChild("Humanoid") then
        rig.Humanoid:Sit()
    end
end)
