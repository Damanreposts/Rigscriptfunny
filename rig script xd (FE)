local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- Create RemoteEvents for communication
local toggleFollowEvent = Instance.new("RemoteEvent")
toggleFollowEvent.Name = "ToggleFollow"
toggleFollowEvent.Parent = ReplicatedStorage

local jumpRigEvent = Instance.new("RemoteEvent")
jumpRigEvent.Name = "JumpRig"
jumpRigEvent.Parent = ReplicatedStorage

local sitRigEvent = Instance.new("RemoteEvent")
sitRigEvent.Name = "SitRig"
sitRigEvent.Parent = ReplicatedStorage

-- Function to create an R6 rig
local function createR6Rig(player)
    local rig = Instance.new("Model", workspace)
    rig.Name = player.Name .. "'s Rig"
    
    local humanoid = Instance.new("Humanoid", rig)
    humanoid.MaxHealth = math.huge
    humanoid.Health = humanoid.MaxHealth
    
    local humanoidRootPart = Instance.new("Part", rig)
    humanoidRootPart.Size = Vector3.new(2, 5, 1)
    humanoidRootPart.Anchored = false
    humanoidRootPart.CanCollide = true
    humanoidRootPart.Position = player.Character.HumanoidRootPart.Position + Vector3.new(5, 0, 0)
    humanoidRootPart.Name = "HumanoidRootPart"
    
    -- Create R6 parts
    local head = Instance.new("Part", rig)
    head.Size = Vector3.new(2, 1, 1)
    head.Position = humanoidRootPart.Position + Vector3.new(0, 3, 0)
    head.Name = "Head"
    head.BrickColor = BrickColor.White()
    
    local torso = Instance.new("Part", rig)
    torso.Size = Vector3.new(2, 2, 1)
    torso.Position = humanoidRootPart.Position + Vector3.new(0, 1, 0)
    torso.Name = "Torso"
    
    local leftLeg = Instance.new("Part", rig)
    leftLeg.Size = Vector3.new(1, 2, 1)
    leftLeg.Position = humanoidRootPart.Position + Vector3.new(-0.5, -1, 0)
    leftLeg.Name = "Left Leg"
    
    local rightLeg = Instance.new("Part", rig)
    rightLeg.Size = Vector3.new(1, 2, 1)
    rightLeg.Position = humanoidRootPart.Position + Vector3.new(0.5, -1, 0)
    rightLeg.Name = "Right Leg"
    
    local leftArm = Instance.new("Part", rig)
    leftArm.Size = Vector3.new(1, 2, 1)
    leftArm.Position = humanoidRootPart.Position + Vector3.new(-1.5, 1, 0)
    leftArm.Name = "Left Arm"
    
    local rightArm = Instance.new("Part", rig)
    rightArm.Size = Vector3.new(1, 2, 1)
    rightArm.Position = humanoidRootPart.Position + Vector3.new(1.5, 1, 0)
    rightArm.Name = "Right Arm"

    -- Create joints between parts
    Instance.new("WeldConstraint", torso).Part0 = humanoidRootPart
    Instance.new("WeldConstraint", torso).Part0 = torso
    Instance.new("WeldConstraint", torso).Part0 = leftLeg
    Instance.new("WeldConstraint", torso).Part0 = rightLeg
    Instance.new("WeldConstraint", torso).Part0 = leftArm
    Instance.new("WeldConstraint", torso).Part0 = rightArm

    return rig
end

local playerRigs = {}

-- Player GUI Setup
local function setupPlayerGui(player)
    local playerGui = player:WaitForChild("PlayerGui")
    local gui = Instance.new("ScreenGui", playerGui)
    gui.Name = "RigControlGUI"

    -- Background Frame
    local background = Instance.new("Frame", gui)
    background.Size = UDim2.new(0, 300, 0, 400)
    background.Position = UDim2.new(0.5, -150, 0.5, -200)
    background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    background.BackgroundTransparency = 0.5
    background.BorderSizePixel = 0

    -- Draggable Functionality
    local isDragging = false
    local dragStart
    local startPos

    local function updateInput(input)
        if isDragging then
            local delta = input.Position - dragStart
            background.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end

    background.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            dragStart = input.Position
            startPos = background.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    isDragging = false
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(updateInput)

    -- Close Button
    local closeButton = Instance.new("TextButton", background)
    closeButton.Size = UDim2.new(0, 40, 0, 40)
    closeButton.Position = UDim2.new(1, -50, 0, 10)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.Text = "X"
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = 24
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)

    closeButton.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)

    -- Function to create rainbow buttons
    local function createRainbowButton(parent, text, position)
        local button = Instance.new("TextButton", parent)
        button.Size = UDim2.new(0, 280, 0, 50)
        button.Position = position
        button.Text = text
        button.Font = Enum.Font.SourceSansBold
        button.TextSize = 24
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        
        -- Create a gradient for the button background
        local gradient = Instance.new("UIGradient", button)
        gradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)), -- Red
            ColorSequenceKeypoint.new(0.2, Color3.fromRGB(255, 165, 0)), -- Orange
            ColorSequenceKeypoint.new(0.4, Color3.fromRGB(255, 255, 0)), -- Yellow
            ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 255, 0)), -- Green
            ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 0, 255)), -- Blue
            ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 0, 130)) -- Indigo
        })

        return button
    end

    -- Spawn Rig Button
    local spawnButton = createRainbowButton(background, "Spawn Rig", UDim2.new(0, 10, 0, 50))

    -- Follow Button
    local followButton = createRainbowButton(background, "Follow", UDim2.new(0, 10, 0, 110))

    local following = false

    followButton.MouseButton1Click:Connect(function()
        -- Send a request to the server to toggle following
        toggleFollowEvent:FireServer(following)
        following = not following
        followButton.Text = following and "Stop Following" or "Follow"
    end)

    -- Jump Button
    local jumpButton = createRainbowButton(background, "Jump", UDim2.new(0, 10, 0, 170))

    jumpButton.MouseButton1Click:Connect(function()
        -- Send a request to the server to make the rig jump
        jumpRigEvent:FireServer()
    end)

    -- Sit Button
    local sitButton = createRainbowButton(background, "Sit", UDim2.new(0, 10, 0, 230))

    sitButton.MouseButton1Click:Connect(function()
        -- Send a request to the server to make the rig sit
        sitRigEvent:FireServer()
    end)
end

-- Handle player joining
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Wait() -- Wait for character to be added
    setupPlayerGui(player) -- Setup GUI for the player
end)

local playerRigs = {}

-- Handle rig creation and following
toggleFollowEvent.OnServerEvent:Connect(function(player, following)
    if following then
        local rig = createR6Rig(player)
        playerRigs[player.UserId] = rig

        -- Follow the player
        while playerRigs[player.UserId] and player.Character and player.Character:FindFirstChild("HumanoidRootPart") do
            local rigHumanoidRootPart = rig:FindFirstChild("HumanoidRootPart")
            if rigHumanoidRootPart then
                rigHumanoidRootPart.Position = player.Character.HumanoidRootPart.Position + Vector3.new(5, 0, 0) -- Adjust position
            end
            wait(0.1)
        end
    else
        -- Stop following and remove the rig
        if playerRigs[player.UserId] then
            playerRigs[player.UserId]:Destroy()
            playerRigs[player.UserId] = nil
        end
    end
end)

jumpRigEvent.OnServerEvent:Connect(function(player)
    local rig = playerRigs[player.UserId]
    if rig and rig:FindFirstChild("Humanoid") then
        rig.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

sitRigEvent.OnServerEvent:Connect(function(player)
    local rig = playerRigs[player.UserId]
    if rig and rig:FindFirstChild("Humanoid") then
        rig.Humanoid:Sit()
    end
end)
